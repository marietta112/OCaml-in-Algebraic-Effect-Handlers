open Effect
open Effect.Deep
open Printf
open Utils
open List

let func2 () =
  for i = 0 to (List.length !(Utils.E.trace_lst) - 1) do
    perform(Utils.E.Report (List.nth !(Utils.E.trace_lst) i))
  done

  (* Iteratively go through the list of integers generated by the instrumentation. With each step, the 
     [Report] effect is raised so that the monitor checks whether its an allowed integer or not. *)

let monitor2 x = match_with func2 x
{
  effc = (fun (type b) (eff: b Effect.t) ->
    match eff with
    | Utils.E.Report s -> 
      Some (fun (k: (b,_) continuation) -> 
      if s = (-1)  then printf "Put with value -1 encountered.\n" 
                    else printf "Put found with allowed value %d.\n" s; continue k ())
    | _ -> None
  );
  exnc = raise; (* Optional *)
  retc = fun x-> x (* Required *)
}

let run_mon2 () = monitor2 ()